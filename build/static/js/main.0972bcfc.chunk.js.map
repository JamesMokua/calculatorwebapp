{"version":3,"sources":["components/Keypad.js","components/Display.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","root","margin","spacing","button","marginRight","width","backgroundColor","buttonoperator","Keypad","setNumber","setOutput","setInputText","inputText","calculate","classes","registerInput","number","useEffect","className","Box","textAlign","Button","onClick","variant","size","slice","length","marginTop","field","marginLeft","borderColor","Display","output","isMounted","useState","setIsMounted","React","useMounted","join","TextField","value","App","setOutPut","Navbar","bg","Container","Brand","href","Nav","Link","out","evaluate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0972bcfc.chunk.js","sourcesContent":["import React,{useEffect} from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Box from '@material-ui/core/Box'\r\n\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n      \r\n    },\r\n    button: {\r\n    marginRight: '1vw',\r\n    width: '10vw',\r\n    backgroundColor: \"#fda085\",\r\n    '&:hover': {\r\n        backgroundColor:\"#800080\"\r\n    }\r\n    },\r\n    buttonoperator: {\r\n        marginRight: '1vw',\r\n        width: '10vw',\r\n        backgroundColor: \"#800080\",\r\n        '&:hover': {\r\n            backgroundColor:\"#fda085\"\r\n        }\r\n    },\r\n   \r\n  }),\r\n);\r\n\r\nfunction Keypad({setNumber,setOutput,setInputText,inputText,calculate}) {\r\n    const classes = useStyles();\r\n    \r\n    const registerInput =  (number) => {\r\n      setNumber(number)\r\n    }\r\n    useEffect(() => {\r\n     registerInput()\r\n    }, [registerInput])\r\n    const clear = () => {\r\n    setInputText('');\r\n    setOutput('')\r\n    }\r\n    const clearOne = () => {\r\n      setInputText(inputText.slice(0, inputText.length - 1))\r\n      }\r\n  \r\n    \r\n    \r\n    return (\r\n        <div className={classes.root}>\r\n<Box textAlign=\"center\">\r\n  <Button  onClick={() => clear()} className={classes.button} variant=\"contained\" size=\"large\" >Clear</Button>\r\n  <Button  onClick={() => clearOne()}  className={classes.button}  variant=\"contained\" size=\"large\">C</Button>\r\n  <Button  onClick={() => registerInput('.')}  className={classes.button}  variant=\"contained\" size=\"large\">.</Button>\r\n</Box>\r\n <Box textAlign=\"center\">\r\n  <Button onClick={() => registerInput('1')}  className={classes.button} variant=\"contained\" size=\"large\" >1</Button>\r\n  <Button  onClick={() => registerInput('2')}  className={classes.button} variant=\"contained\" size=\"large\" >2</Button>\r\n  <Button  onClick={() => registerInput('3')}  className={classes.button}  variant=\"contained\" size=\"large\">3</Button>\r\n</Box>\r\n<Box textAlign=\"center\">\r\n  <Button  onClick={() => registerInput('4')} className={classes.button}  variant=\"contained\" size=\"large\" >4</Button>\r\n  <Button  onClick={() => registerInput('5')}  className={classes.button}  variant=\"contained\" size=\"large\" >5</Button>\r\n  <Button  onClick={() => registerInput('6')}  className={classes.button} variant=\"contained\" size=\"large\" >6</Button>\r\n</Box>\r\n<Box textAlign=\"center\">\r\n  <Button  onClick={() => registerInput('7')}  className={classes.button}  variant=\"contained\" size=\"large\" >7</Button>\r\n  <Button   onClick={() => registerInput('8')}  className={classes.button} variant=\"contained\" size=\"large\" >8</Button>\r\n  <Button   onClick={() => registerInput('9')}  className={classes.button} variant=\"contained\" size=\"large\" >9</Button>\r\n</Box>\r\n<Box textAlign=\"center\">\r\n<Button  onClick={() => registerInput('(')} className={classes.button} variant=\"contained\" size=\"large\" >(</Button>\r\n<Button  onClick={() => registerInput(')')} className={classes.button} variant=\"contained\" size=\"large\" >)</Button>\r\n  <Button  onClick={() => registerInput('0')} className={classes.button} variant=\"contained\" size=\"large\" >0</Button>\r\n</Box>\r\n<Box  textAlign=\"center\">\r\n  <Button onClick={() => registerInput('+')}  className={classes.buttonoperator} variant=\"contained\" size=\"large\" ><strong>+</strong></Button>\r\n  <Button onClick={() => registerInput('-')} className={classes.buttonoperator} variant=\"contained\" size=\"large\" ><strong>-</strong></Button>\r\n  <Button onClick={() => registerInput('/')} className={classes.buttonoperator} variant=\"contained\" size=\"large\" ><strong>/</strong></Button>\r\n  <Button onClick={() => registerInput('*')} className={classes.buttonoperator} variant=\"contained\" size=\"large\" ><strong>*</strong></Button>\r\n</Box>\r\n<Box textAlign=\"center\">\r\n  <Button onClick={() => calculate()} className={classes.button} variant=\"contained\" size=\"large\" >=</Button>\r\n</Box>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Keypad\r\n","import React, { useEffect,useState } from 'react'\r\nimport Box from '@material-ui/core/Box'\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n   root: {\r\n    marginTop: 20,\r\n   },\r\n   field: {\r\n       width: '31.8vw',\r\n       marginLeft: '-1.2vw',\r\n       // (Note: space or no space after & matters. See SASS \"parent selector\".)\r\n       '& .MuiOutlinedInput-root': {  // - The Input-root, inside the TextField-root\r\n           '& fieldset': {            // - The <fieldset> inside the Input-root\r\n               borderColor: '#000',   // - Set the Input border\r\n           },\r\n           '&:hover fieldset': {\r\n               borderColor: '#800080', // - Set the Input border when parent has :hover\r\n           },\r\n           '&.Mui-focused fieldset': { // - Set the Input border when parent is focused \r\n               borderColor: '#800080',\r\n           },\r\n       },\r\n   }\r\n  }),\r\n);\r\n\r\nfunction useMounted() {\r\n    const [isMounted, setIsMounted] = useState(false)\r\n  \r\n  \r\n    React.useEffect(() => {\r\n      setIsMounted(true)\r\n    }, [])\r\n    return isMounted\r\n  }\r\n\r\nfunction Display({number,setInputText,inputText,output}) {\r\n    const isMounted = useMounted()\r\n    React.useEffect(() => {\r\n        if (isMounted) {\r\n          setInputText([number]); \r\n        }\r\n    \r\n      }, [])//prevent creation of a empty number element\r\n      React.useEffect(() => {\r\n        if (isMounted) {       \r\n         setInputText([...inputText,number].join('')); \r\n        }\r\n    \r\n      }, [number])\r\n\r\n  \r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Box textAlign=\"center\">\r\n     <form className={classes.root} >\r\n      <TextField className={classes.field} value={inputText || output}   variant=\"outlined\"  />\r\n    </form>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display\r\n\r\n","import React,{useState,useEffect} from 'react'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Keypad from './components/Keypad';\nimport Display from './components/Display';\nimport {evaluate } from 'mathjs'\n\n\nfunction App() {\n  const[inputText,setInputText] = useState([])\n  const[output,setOutPut]= useState([])\n  const[number,setNumber] = useState(0)\n      const calculate = () => {\n             const out = evaluate(inputText)  \n             setOutPut(out)\n             setInputText('')\n            }\n  return (\n  \n    <div className=\"App\">\n    <Navbar bg=\"dark\" variant=\"dark\">\n    <Container>\n    <Navbar.Brand href=\"home\">My Calc</Navbar.Brand>\n    <Nav>\n      <Nav.Link href=\"home\">Home</Nav.Link>\n      <Nav.Link href=\"home\">Standard</Nav.Link>\n    </Nav>\n    </Container>\n  </Navbar>\n  <Display \n  number={number} \n  setInputText={setInputText}\n   inputText={inputText}\n   setNumber={setNumber}\n   output={output}\n   />\n  <Keypad\n    inputText={inputText}\n  setInputText={setInputText}\n   number={number}\n   setNumber={setNumber}\n   calculate={calculate}\n   setOutput={setOutPut}\n    />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}